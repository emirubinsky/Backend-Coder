openapi: 3.0.0
info:
  title: API de Productos
  description: Documentación de API para la gestión de productos.
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /api/products/{id}:
    get:
      summary: Obtener un producto por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a obtener
          schema:
            type: string
      responses:
        '200':
          description: Un solo producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        '404':
          description: Producto no encontrado

    put:
      summary: Actualizar un producto existente por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                code:
                  type: string
                category:
                  type: string
                brand:
                  type: string
                price:
                  type: number
                stock:
                  type: integer
                status:
                  type: string
                image:
                  type: string
                  format: binary
                thumbnails:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Producto actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        '400':
          description: Solicitud incorrecta
        '401':
          description: No autorizado
        '404':
          description: Producto no encontrado

    delete:
      summary: Eliminar un producto por ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto a eliminar
          schema:
            type: string
      responses:
        '200':
          description: Producto eliminado
        '400':
          description: Solicitud incorrecta
        '401':
          description: No autorizado
        '404':
          description: Producto no encontrado

  /api/products:
    get:
      summary: Obtener una lista de productos
      parameters:
        - in: query
          name: query
          description: Filtrar productos por consulta
          schema:
            type: string
        - in: query
          name: limit
          description: Limitar el número de resultados
          schema:
            type: integer
        - in: query
          name: page
          description: Página de resultados
          schema:
            type: integer
        - in: query
          name: sort
          description: Ordenar resultados
          schema:
            type: string
      responses:
        '200':
          description: Una lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
        '400':
          description: Solicitud incorrecta

    post:
      summary: Añadir un nuevo producto
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                code:
                  type: string
                category:
                  type: string
                brand:
                  type: string
                price:
                  type: number
                stock:
                  type: integer
                status:
                  type: string
                image:
                  type: string
                  format: binary
                thumbnails:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Producto creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        '400':
          description: Solicitud incorrecta
        '401':
          description: No autorizado

components:
  schemas:
    Producto:
      type: object
      properties:
        id:
          type: string
          example: "60d21b4667d0d8992e610c0d"
        title:
          type: string
          example: "Producto de Ejemplo"
        description:
          type: string
          example: "Esta es una descripción del producto."
        code:
          type: string
          example: "PROD123"
        category:
          type: string
          example: "Electrónica"
        brand:
          type: string
          example: "MarcaX"
        price:
          type: number
          example: 199.99
        stock:
          type: integer
          example: 50
        status:
          type: string
          example: "Disponible"
        image:
          type: string
          format: binary
        thumbnails:
          type: array
          items:
            type: string
            format: binary
